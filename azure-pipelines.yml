trigger:
  branches:
    include:
      - main

pool:
  name: default   # your self-hosted macOS agent pool

variables:
- group: docker-hub-secrets

stages:
# ============================================================
# 1Ô∏è‚É£ Build, Scan, and Push Docker Image
# ============================================================
- stage: Build_and_Scan
  displayName: 'Build Docker Image & Security Scan'
  jobs:
  - job: Build
    displayName: 'Build, Scan, Push'
    steps:
    - checkout: self
      fetchDepth: 1

    - script: |
        echo "üîß Building Docker image..."
        docker build -t taskflow-api:$(Build.BuildId) ./src/api
        docker tag taskflow-api:$(Build.BuildId) taskflow-api:latest
      displayName: 'Build Docker image'

    - script: |
        echo "üß™ Installing Trivy for vulnerability scan..."
        brew install aquasecurity/trivy/trivy
        trivy image --severity HIGH,CRITICAL taskflow-api:$(Build.BuildId) || true
      displayName: 'Trivy: Scan (non-blocking)'
      condition: succeeded()

    - script: |
        echo "üîç Running npm audit..."
        cd src/api
        npm audit --audit-level high --omit=dev || true
      displayName: 'npm audit: Check dependencies'
      condition: succeeded()

    - script: |
        echo "üì¶ Logging into Docker Hub..."
        echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USER}" --password-stdin
        echo "üöÄ Pushing Docker images..."
        docker tag taskflow-api:$(Build.BuildId) ${DOCKERHUB_USER}/taskflow-api:$(Build.BuildId)
        docker push ${DOCKERHUB_USER}/taskflow-api:$(Build.BuildId)
        docker tag ${DOCKERHUB_USER}/taskflow-api:$(Build.BuildId) ${DOCKERHUB_USER}/taskflow-api:latest
        docker push ${DOCKERHUB_USER}/taskflow-api:latest
      env:
        DOCKERHUB_USER: $(DOCKERHUB_USER)
        DOCKERHUB_PASSWORD: $(DOCKERHUB_PASSWORD)
      displayName: 'Push image to Docker Hub'

# ============================================================
# 2Ô∏è‚É£ Deploy to Azure App Service (Docker)
# ============================================================
- stage: Deploy_Azure
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build_and_Scan
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy TaskFlow API'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo "üîê Using Azure CLI context for deployment..."
              az account show
              echo "üöÄ Deploying container image to App Service..."
              az webapp config container set \
                --name taskflow-docker \
                --resource-group rg-taskflow-docker \
                --docker-custom-image-name ${DOCKERHUB_USER}/taskflow-api:$(Build.BuildId) \
                --docker-registry-server-url https://index.docker.io
              echo "‚ôªÔ∏è Restarting App Service..."
              az webapp restart --name taskflow-docker --resource-group rg-taskflow-docker
            env:
              DOCKERHUB_USER: $(DOCKERHUB_USER)
            displayName: 'Deploy container to Azure App Service'

          - script: |
              echo "‚è≥ Waiting 30s for container to boot..."
              sleep 30
              echo "üîé Checking app health..."
              curl -I https://taskflow-docker.azurewebsites.net || true
            displayName: 'Verify deployment health'
