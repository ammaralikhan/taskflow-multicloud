# azure-pipelines.yml
trigger:
  branches:
    include:
      - main

pool:
  name: default

variables:
- group: docker-hub-secrets  # We'll create this in Azure DevOps UI

stages:
- stage: Build_and_Scan
  displayName: 'Build Docker Image & Security Scan'
  jobs:
  - job: Build
    displayName: 'Build, Scan, Push'
    steps:
    - checkout: self
      fetchDepth: 1

    - script: |
        docker build -t taskflow-api:$(Build.BuildId) ./src/api
        docker tag taskflow-api:$(Build.BuildId) taskflow-api:latest
      displayName: 'Build Docker image'

    - script: |
        brew install aquasecurity/trivy/trivy
        trivy image --severity HIGH,CRITICAL --exit-code 1 taskflow-api:$(Build.BuildId)
      displayName: 'Trivy: Scan container for CVEs'
      condition: succeeded()

    - script: |
        cd src/api
        npm audit --audit-level high --omit=dev
      displayName: 'npm audit: Check for vulnerable dependencies'
      condition: succeeded()

    - script: |
        echo $(DOCKERHUB_PASSWORD) | docker login -u $(DOCKERHUB_USER) --password-stdin
        docker tag taskflow-api:$(Build.BuildId) $(DOCKERHUB_USER)/taskflow-api:$(Build.BuildId)
        docker push $(DOCKERHUB_USER)/taskflow-api:$(Build.BuildId)
        docker tag $(DOCKERHUB_USER)/taskflow-api:$(Build.BuildId) $(DOCKERHUB_USER)/taskflow-api:latest
        docker push $(DOCKERHUB_USER)/taskflow-api:latest
      displayName: 'Push image to Docker Hub'
      env:
        DOCKERHUB_PASSWORD: $(DOCKERHUB_PASSWORD)

- stage: Deploy_Azure
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build_and_Scan
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy TaskFlow API'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              appName: 'taskflow-6'
              appType: 'webAppContainerLinux'
              containerRegistry: 'DockerHub'
              dockerNamespace: '$(DOCKERHUB_USER)'
              dockerRepository: 'taskflow-api'
              dockerImageTag: '$(Build.BuildId)'
